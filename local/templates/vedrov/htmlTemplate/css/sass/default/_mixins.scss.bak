@mixin inline-block {
	display: inline-block;
	*display: inline;
	*zoom: 1;
}

@mixin box-shadow($box-shadow...) {
	-moz-box-shadow: $box-shadow;
	-webkit-box-shadow: $box-shadow;
	-o-box-shadow: $box-shadow;
	-ms-box-shadow: $box-shadow;
	box-shadow: $box-shadow;
}

@mixin box-sizing($box-sizing) {
	-webkit-box-sizing: $box-sizing;
	-moz-box-sizing: $box-sizing;
	-ms-box-sizing: $box-sizing;
	box-sizing: $box-sizing;
}

@mixin gradient($gradient, $fallback, $pie: false) {
	background: $fallback;
	background: -webkit-linear-gradient($gradient);
	background: -moz-linear-gradient($gradient);
	background: -o-linear-gradient($gradient);
	background: -ms-linear-gradient($gradient);
	background: linear-gradient($gradient);
	@if $pie==true {
		-pie-background: linear-gradient($gradient);
	}
}

@mixin simple-gradient($direction, $color1, $color1pos, $color2, $color2pos) {
	background: $color1;
	background: -webkit-linear-gradient($direction, $color1 $color1pos, $color2 $color2pos);
	background: -moz-linear-gradient($direction, $color1 $color1pos, $color2 $color2pos);
	background: -o-linear-gradient($direction, $color1 $color1pos, $color2 $color2pos);
	background: -ms-linear-gradient($direction, $color1 $color1pos, $color2 $color2pos);
	background: linear-gradient($direction, $color1 $color1pos, $color2 $color2pos);
	-pie-background: linear-gradient($direction, $color1 $color1pos, $color2 $color2pos);
}

@mixin transition($transition...) {
	-webkit-transition: $transition;
	-moz-transition: $transition;
	-o-transition: $transition;
	-ms-transition: $transition;
	transition: $transition;
}
/*@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}*/

//transition times
@mixin transition-duration ($times...) {
  -moz-transition-duration: $times;
  -o-transition-duration: $times;
  -ms-transition-duration: $times;
  -webkit-transition-duration: $times;
  transition-duration: $times;
}

@mixin transition-delay ($times...) {
  -moz-transition-delay: $times;
  -o-transition-delay: $times;
  -ms-transition-delay: $times;
  -webkit-transition-delay: $times;
  transition-delay: $times;
}

//transition
@mixin transition-transform( $args... ) {
  -webkit-transition: -webkit-transform $args;
  -moz-transition:    -moz-transform $args;
  -ms-transition:     -ms-transform $args;
  -o-transition:      -o-transform $args;
  transition:         transform $args;
}

@mixin transform($transform...) {
	-webkit-transform: $transform;
	-moz-transform: $transform;
	-o-transform: $transform;
	-ms-transform: $transform;
	transform: $transform;
}
//transform origin
@mixin transform-origin ($origin) {
  -moz-transform-origin: $origin;
  -o-transform-origin: $origin;
  -ms-transform-origin: $origin;
  -webkit-transform-origin: $origin;
  transform-origin: $origin;
}
@mixin transition-property ($property...) {
  -moz-transition-property: $property;
  -o-transition-property: $property;
  -ms-transition-property: $property;
  -webkit-transition-property: $property;
  transition-property: $property;
}


@mixin font($size: $base-font-size, $height: $base-line-height, $weight: 400, $font: $font1) {
	font-weight: $weight;
	font-size: $size + px;
	line-height: $height + px;
	font-family: $font;
}

@mixin pie {
	behavior: url(JS/PIE.htc);
	position: relative;
}

@mixin opacity($opacity) {
	opacity: $opacity;
	filter: alpha(opacity=($opacity * 100));
}

@mixin grayscale {
	filter: grayscale(100%);
	-webkit-filter: grayscale(100%);
	-moz-filter: grayscale(100%);
	-ms-filter: grayscale(100%);
	-o-filter: grayscale(100%);
	filter: url(#{$img}desaturate.svg#greyscale);
	filter: gray;
	-webkit-filter: grayscale(1);
	@include transition(all .25s ease);
	&:hover {
		filter: none;
		-webkit-filter: grayscale(0);
	}
}

@mixin group {
	&:before,
	&:after {
		content: "";
		display: table;
	}
	&:after {
		clear: both;
	}
	& {
		*zoom: 1;
	}
}

@mixin icons {
	background-image: $icons;
	background-repeat: no-repeat;
}

@mixin twins {
	display: block;
	position: absolute;
	content: "";
}

@mixin clear {
	@include twins;
	position: relative;
	clear: both;
}

@mixin flex-wrap($flex-wrap) {
	-webkit-flex-wrap: $flex-wrap;
	-moz-flex-wrap: $flex-wrap;
	-o-flex-wrap: $flex-wrap;
	-ms-flex-wrap: $flex-wrap;
	flex-wrap: $flex-wrap;
}

@mixin flex-all($flex-all) {
	-webkit-flex: $flex-all;
	-moz-flex: $flex-all;
	-o-flex: $flex-all;
	-ms-flexbox: $flex-all;
	flex: $flex-all;
}

@mixin flex-basis($flex-basis) {
	-webkit-flex-basis: $flex-basis;
	-moz-flex-basis: $flex-basis;
	-o-flex-basis: $flex-basis;
	-ms-flex-basis: $flex-basis;
	flex-basis: $flex-basis;
}

@mixin align-items($align-items) {
	-webkit-align-items: $align-items;
	-moz-align-items: $align-items;
	-o-align-items: $align-items;
	-ms-flex-align-items: $align-items;
	align-items: $align-items;
}
@mixin align-self($align-self) {
	-webkit-align-self: $align-self;
	-moz-align-self: $align-self;
	-o-align-self: $align-self;
	-ms-flex-align-self: $align-self;
	align-self: $align-self;
}

@mixin align-content($align-content) {
	-webkit-align-content: $align-content;
	-moz-align-content: $align-content;
	-o-align-content: $align-content;
	-ms-flex-align-content: $align-content;
	align-content: $align-content;
}

@mixin justify-content($justify-content) {
	-webkit-justify-content: $justify-content;
	-moz-justify-content: $justify-content;
	-o-justify-content: $justify-content;
	-ms-flex-pack: $justify-content;
	justify-content: $justify-content;
}

@mixin display-flex {
	display: -moz-flex;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
}
@mixin display-inline-flex {
	display: -moz-inline-flex;
	display: -ms-inline-flexbox;
	display: -webkit-inline-flex;
	display: inline-flex;
}
@mixin order($order) {
	-webkit-order: $order;
	-moz-order: $order;
	-o-order: $order;
	-ms-order: $order;
	order: $order;
}

@mixin breakpoint($point) {
	@if $point==tablet-windows {
		@media (min-width: 1400px) {
			@content;
		}
	}
	@if $point==tablet-windowscape0 {
		@media (min-width: 1181px) {
			@content;
		}
	}
	@if $point==tablet-windowscape {
		@media (max-width: 1180px) {
			@content;
		}
	}
	@if $point==tablet-windowscape1 {
		@media (max-width: 1080px) {
			@content;
		}
	}
	@if $point==tablet-landscape1 {
		@media (min-width: 1000px) {
			@content;
		}
	}
	@if $point==tablet-landscape {
		@media (max-width: 1024px) {
			@content;
		}
	}
	@else if $point==tablet-portrait {
		@media (max-width: 990px) {
			@content;
		}
	}
	@else if $point==tablet-portrait1 {
		@media (max-width: 900px) {
			@content;
		}
	}
	@else if $point==tablet-portrait2 {
		@media (max-width: 830px) {
			@content;
		}
	}
	@else if $point==tablet-small-portrait {
		@media (max-width: 700px) {
			@content;
		}
	}
	@else if $point==tablet-small-portrait1 {
		@media (max-width: 600px) {
			@content;
		}
	}
	@else if $point==phone-landscape {
		@media (max-width: 480px) {
			@content;
		}
	}
	@else if $point==phone-landscape1 {
		@media (max-width: 415px) {
			@content;
		}
	}
}

@mixin custom-device($min, $max) {
	@include mq($media-type: 'screen', $min-width: $min, $max-width: $max) {
		@content;
	}
}